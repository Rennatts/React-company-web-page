{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Renata\\\\Desktop\\\\projects\\\\My website2\\\\website\\\\src\\\\companies\\\\register\\\\Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, connect } from 'react-redux';\nimport { register } from '../../redux/actions/companyActions';\nimport './register.css';\nimport { TOGGLE_SUCCESS } from '../../redux/types/companyTypes';\n\nfunction Register({\n  companyError,\n  companySuccess\n}) {\n  const [company, setCompany] = useState({\n    company_name: \"\",\n    email: \"\",\n    password: \"\",\n    city: \"\",\n    state: \"\",\n    address: \"\",\n    zip_code: \"\"\n  });\n  const dispatch = useDispatch();\n  const {\n    company_name,\n    email,\n    password\n  } = company;\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    if (companyError && companyError !== null) {\n      setError(companyError);\n    }\n\n    if (companySuccess) {\n      setSuccess(companySuccess);\n      dispatch({\n        type: TOGGLE_SUCCESS\n      });\n    }\n  }, [companyError, companySuccess, dispatch]);\n\n  function redirectUser() {\n    return success && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }\n    });\n  }\n\n  ;\n\n  function handleInputChange(event) {\n    setError(\"\");\n    setCompany({ ...company,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  ;\n\n  function showError() {\n    return error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, error);\n  }\n\n  ;\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    dispatch(register(company));\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, showError(), redirectUser(), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Signup\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Company name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => handleInputChange(event),\n    type: \"text\",\n    name: \"company_name\",\n    required: true,\n    className: \"form-control\",\n    value: company_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => handleInputChange(event),\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"city\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => handleInputChange(event),\n    type: \"city\",\n    name: \"city\",\n    required: true,\n    className: \"form-control\",\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"state\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => handleInputChange(event),\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => handleInputChange(event),\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => handleInputChange(event),\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    className: \"form-control\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"register_btn\",\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 20\n    }\n  }, \"Submit\"))));\n}\n\n;\n\nconst mapStateToProps = ({\n  company: {\n    companyError,\n    companySuccess\n  }\n}) => ({\n  companyError,\n  companySuccess\n});\n\nexport default connect(mapStateToProps, null)(Register);","map":{"version":3,"sources":["C:/Users/Renata/Desktop/projects/My website2/website/src/companies/register/Register.js"],"names":["React","useState","useEffect","Redirect","useDispatch","connect","register","TOGGLE_SUCCESS","Register","companyError","companySuccess","company","setCompany","company_name","email","password","city","state","address","zip_code","dispatch","error","setError","success","setSuccess","type","redirectUser","handleInputChange","event","target","name","value","showError","handleFormSubmit","preventDefault","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,OAAO,gBAAP;AAGA,SACIC,cADJ,QAEO,gCAFP;;AAOA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,EAAoD;AAChD,QAAK,CAAEC,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC;AACpCY,IAAAA,YAAY,EAAE,EADsB;AAEpCC,IAAAA,KAAK,EAAE,EAF6B;AAGpCC,IAAAA,QAAQ,EAAE,EAH0B;AAIpCC,IAAAA,IAAI,EAAE,EAJ8B;AAKpCC,IAAAA,KAAK,EAAE,EAL6B;AAMpCC,IAAAA,OAAO,EAAE,EAN2B;AAOpCC,IAAAA,QAAQ,EAAE;AAP0B,GAAD,CAAvC;AAUA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAoCJ,OAA1C;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAKO,YAAY,IAAIA,YAAY,KAAK,IAAtC,EAA6C;AACzCa,MAAAA,QAAQ,CAACb,YAAD,CAAR;AACH;;AACD,QAAGC,cAAH,EAAmB;AACfc,MAAAA,UAAU,CAACd,cAAD,CAAV;AACAU,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAElB;AAAP,OAAD,CAAR;AACH;AACJ,GARQ,EAQN,CAACE,YAAD,EAAeC,cAAf,EAA+BU,QAA/B,CARM,CAAT;;AAYA,WAASM,YAAT,GAAuB;AACnB,WAAOH,OAAO,iBAAI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AAEH;;AAAA;;AAGD,WAASI,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9BN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAV,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAa,OAACiB,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA/C,KAAD,CAAV;AACH;;AAAA;;AAED,WAASC,SAAT,GAAqB;AACjB,WAAOX,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,KAArC,CAAhB;AACH;;AAAA;;AAGD,WAASY,gBAAT,CAA0BL,KAA1B,EAAgC;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACAd,IAAAA,QAAQ,CAACd,QAAQ,CAACK,OAAD,CAAT,CAAR;AACH;;AAAA;AAKD,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKqB,SAAS,EAFd,EAIKN,YAAY,EAJjB,eAMI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACA,IAAA,QAAQ,EAAGE,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CADrC;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,cAHL;AAIA,IAAA,QAAQ,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAMA,IAAA,KAAK,EAAEf,YANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,eAaI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACA,IAAA,QAAQ,EAAGe,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CADrC;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,IAAI,EAAE,OAHN;AAIA,IAAA,QAAQ,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAMA,IAAA,KAAK,EAAEd,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,eAwBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACA,IAAA,QAAQ,EAAGc,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CADrC;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAE,MAHN;AAIA,IAAA,QAAQ,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAMA,IAAA,KAAK,EAAEZ,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxBJ,eAmCI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACA,IAAA,QAAQ,EAAGY,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CADrC;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,IAAI,EAAE,OAHN;AAIA,IAAA,QAAQ,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAMA,IAAA,KAAK,EAAEd,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnCJ,eA8CI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACA,IAAA,QAAQ,EAAGc,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CADrC;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,IAAI,EAAE,OAHN;AAIA,IAAA,QAAQ,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAMA,IAAA,KAAK,EAAEd,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA9CJ,eAyDI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACA,IAAA,QAAQ,EAAGc,KAAD,IAAUD,iBAAiB,CAACC,KAAD,CADrC;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,IAAI,EAAE,UAHN;AAIA,IAAA,QAAQ,MAJR;AAKA,IAAA,SAAS,EAAC,cALV;AAMA,IAAA,KAAK,EAAEb,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAzDJ,eAoEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEkB,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CApEJ,CANJ,CADJ;AAoFH;;AAAA;;AAGD,MAAME,eAAe,GAAG,CAAC;AAACxB,EAAAA,OAAO,EAAE;AAACF,IAAAA,YAAD;AAAeC,IAAAA;AAAf;AAAV,CAAD,MAAgD;AACpED,EAAAA,YADoE;AAEpEC,EAAAA;AAFoE,CAAhD,CAAxB;;AAOA,eAAeL,OAAO,CAAC8B,eAAD,EAAkB,IAAlB,CAAP,CAA+B3B,QAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport { register } from '../../redux/actions/companyActions';\r\nimport './register.css';\r\n\r\n\r\nimport {\r\n    TOGGLE_SUCCESS\r\n} from '../../redux/types/companyTypes';\r\n\r\n\r\n\r\n\r\nfunction Register({ companyError, companySuccess }) {\r\n    const[ company, setCompany ] = useState({\r\n        company_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        address: \"\",\r\n        zip_code: \"\"\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { company_name, email, password } = company;\r\n\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if ( companyError && companyError !== null ) {\r\n            setError(companyError);\r\n        }\r\n        if(companySuccess) {\r\n            setSuccess(companySuccess);\r\n            dispatch({type: TOGGLE_SUCCESS})\r\n        }\r\n    }, [companyError, companySuccess, dispatch]);\r\n\r\n\r\n\r\n    function redirectUser(){\r\n        return success && <Redirect to=\"/signin\"></Redirect>\r\n\r\n    };\r\n\r\n\r\n    function handleInputChange(event) {\r\n        setError(\"\");\r\n        setCompany({...company, [event.target.name]: event.target.value});\r\n    };\r\n\r\n    function showError() {\r\n        return error && <div className=\"alert alert-danger\">{error}</div>\r\n    };\r\n    \r\n\r\n    function handleFormSubmit(event){\r\n        event.preventDefault();\r\n        dispatch(register(company));\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            {showError()}\r\n\r\n            {redirectUser()}\r\n\r\n            <form className=\"form\">\r\n            <h2 className=\"title\">Signup</h2>\r\n                <div className=\"input\">\r\n                    <label>Company name</label>\r\n                    <input \r\n                    onChange={(event)=> handleInputChange(event)} \r\n                    type=\"text\" \r\n                    name=\"company_name\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={company_name}></input>\r\n                </div>\r\n\r\n                <div className=\"input\">\r\n                    <label>email</label>\r\n                    <input \r\n                    onChange={(event)=> handleInputChange(event)} \r\n                    type=\"email\" \r\n                    name= \"email\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={email}></input>\r\n                </div>\r\n\r\n                <div className=\"input\">\r\n                    <label>city</label>\r\n                    <input \r\n                    onChange={(event)=> handleInputChange(event)} \r\n                    type=\"city\" \r\n                    name= \"city\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={city}></input>\r\n                </div>\r\n\r\n                <div className=\"input\">\r\n                    <label>state</label>\r\n                    <input \r\n                    onChange={(event)=> handleInputChange(event)} \r\n                    type=\"email\" \r\n                    name= \"email\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={email}></input>\r\n                </div>\r\n\r\n                <div className=\"input\">\r\n                    <label>email</label>\r\n                    <input \r\n                    onChange={(event)=> handleInputChange(event)} \r\n                    type=\"email\" \r\n                    name= \"email\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={email}></input>\r\n                </div>\r\n\r\n                <div className=\"input\">\r\n                    <label>Password</label>\r\n                    <input \r\n                    onChange={(event)=> handleInputChange(event)} \r\n                    type=\"password\" \r\n                    name= \"password\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={password}></input>\r\n                </div>\r\n\r\n                <div className=\"inputbox\">\r\n                   <button className=\"register_btn\" onClick={handleFormSubmit}>Submit</button>\r\n                </div>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = ({company: {companyError, companySuccess}}) => ({\r\n    companyError,\r\n    companySuccess\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Register);\r\n\r\n"]},"metadata":{},"sourceType":"module"}