{"ast":null,"code":"import { GET_COMPANIES, REGISTER, CHECK_AUTH, SIGNOUT, UPDATE, DELETE, COMPANY_ERROR, TOGGLE_SUCCESS, AUTH } from './../types/companyTypes';\nimport axios from 'axios';\nimport { saveUserToLocalStorage, isLogged } from './../../help/';\nexport const register = company => {\n  return dispatch => {\n    axios.post(\"http://localhost:3001/companies/register\", company).then(res => {\n      if (res.data.error) {\n        dispatch({\n          type: COMPANY_ERROR,\n          payload: res.data.error\n        });\n      } else {\n        dispatch({\n          type: REGISTER,\n          payload: res.data\n        });\n        console.log(res.data);\n      }\n    }).catch(err => console.log(err));\n  };\n};\nexport const authCheck = () => {\n  return dispatch => {\n    dispatch({\n      type: CHECK_AUTH,\n      payload: isLogged() ? isLogged() : null\n    });\n  };\n};\nexport const getAllCompanies = token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return dispatch => {\n    axios.get(\"http://localhost:3001/companies/allcompanies\", config).then(res => {\n      if (res.data.error) {\n        dispatch({\n          type: COMPANY_ERROR,\n          payload: res.data.error\n        });\n      } else {\n        dispatch({\n          type: GET_COMPANIES,\n          payload: res.data\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["C:/Users/Renata/Desktop/projects/My website2/website/src/redux/actions/companyActions.js"],"names":["GET_COMPANIES","REGISTER","CHECK_AUTH","SIGNOUT","UPDATE","DELETE","COMPANY_ERROR","TOGGLE_SUCCESS","AUTH","axios","saveUserToLocalStorage","isLogged","register","company","dispatch","post","then","res","data","error","type","payload","console","log","catch","err","authCheck","getAllCompanies","token","config","headers","Authorization","get"],"mappings":"AAAA,SACIA,aADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,OAJJ,EAKIC,MALJ,EAMIC,MANJ,EAOIC,aAPJ,EAQIC,cARJ,EASIC,IATJ,QAUO,yBAVP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,EAAiCC,QAAjC,QAAiD,eAAjD;AAIA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAa;AACjC,SAAQC,QAAD,IAAc;AACjBL,IAAAA,KAAK,CACJM,IADD,CACM,0CADN,EACkDF,OADlD,EAECG,IAFD,CAEMC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,KAAb,EAAoB;AAChBL,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEd,aADD;AAELe,UAAAA,OAAO,EAAEJ,GAAG,CAACC,IAAJ,CAASC;AAFb,SAAD,CAAR;AAIH,OALD,MAKO;AACHL,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEnB,QADD;AAELoB,UAAAA,OAAO,EAAEJ,GAAG,CAACC;AAFR,SAAD,CAAR;AAIAI,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACC,IAAhB;AACH;AACJ,KAfD,EAgBCM,KAhBD,CAgBOC,GAAG,IAAGH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAhBb;AAiBH,GAlBD;AAmBH,CApBM;AAsBP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAOZ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAElB,UADD;AAELmB,MAAAA,OAAO,EAAEV,QAAQ,KAAKA,QAAQ,EAAb,GAAkB;AAF9B,KAAD,CAAR;AAIH,GALD;AAMH,CAPM;AAWP,OAAO,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACtC,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAD1B;AADE,GAAf;AAKA,SAAQd,QAAD,IAAc;AACjBL,IAAAA,KAAK,CACJuB,GADD,CACK,8CADL,EACqDH,MADrD,EAECb,IAFD,CAEMC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,KAAb,EAAoB;AAChBL,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEd,aADD;AAELe,UAAAA,OAAO,EAAEJ,GAAG,CAACC,IAAJ,CAASC;AAFb,SAAD,CAAR;AAIH,OALD,MAKO;AACHL,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEpB,aADD;AAELqB,UAAAA,OAAO,EAAEJ,GAAG,CAACC;AAFR,SAAD,CAAR;AAIH;AACJ,KAdD,EAeCM,KAfD,CAeOC,GAAG,IAAGH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAfb;AAgBH,GAjBD;AAmBH,CAzBM","sourcesContent":["import {\r\n    GET_COMPANIES,\r\n    REGISTER,\r\n    CHECK_AUTH,\r\n    SIGNOUT,\r\n    UPDATE,\r\n    DELETE,\r\n    COMPANY_ERROR,\r\n    TOGGLE_SUCCESS,\r\n    AUTH,\r\n} from './../types/companyTypes';\r\n\r\nimport axios from 'axios';\r\nimport { saveUserToLocalStorage, isLogged } from './../../help/';\r\n\r\n\r\n\r\nexport const register = (company) => {\r\n    return (dispatch) => {\r\n        axios\r\n        .post(\"http://localhost:3001/companies/register\", company)\r\n        .then(res => {\r\n            if (res.data.error) {\r\n                dispatch({\r\n                    type: COMPANY_ERROR,\r\n                    payload: res.data.error\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: REGISTER,\r\n                    payload: res.data\r\n                });\r\n                console.log(res.data);\r\n            }\r\n        })\r\n        .catch(err=> console.log(err))\r\n    };\r\n};\r\n\r\nexport const authCheck = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CHECK_AUTH,\r\n            payload: isLogged() ? isLogged() : null,\r\n        });\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const getAllCompanies = (token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    };\r\n    return (dispatch) => {\r\n        axios\r\n        .get(\"http://localhost:3001/companies/allcompanies\", config)\r\n        .then(res => {\r\n            if (res.data.error) {\r\n                dispatch({\r\n                    type: COMPANY_ERROR,\r\n                    payload: res.data.error\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: GET_COMPANIES,\r\n                    payload: res.data\r\n                });\r\n            }\r\n        })\r\n        .catch(err=> console.log(err))\r\n    };\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}